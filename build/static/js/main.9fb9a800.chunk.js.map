{"version":3,"sources":["components/ErrorToast/index.js","redux/modules/app.js","containers/App/index.js","redux/modules/entities/products.js","redux/modules/entities/index.js","redux/modules/entities/comments.js","redux/modules/entities/orders.js","redux/modules/entities/shops.js","utils/request.js","redux/middlewares/api.js","redux/store.js","redux/modules/home.js","redux/modules/detail.js","utils/url.js","redux/modules/index.js","index.js"],"names":["ErrorToast","error","this","props","className","clearTimer","setTimeout","clearError","clearTimeout","Component","actionTypes","initState","appActions","type","getError","state","app","App","connect","dispatch","bindActionCreators","schame","id","name","comments","products","action","response","orders","shops","headers","Headers","handleRespose","url","status","data","json","console","Promise","reject","message","composeEnhancers","fetchDataAction","store","next","actionWith","a","undefined","types","endPoint","fetchRequestType","fetchSuccessType","fetchFailureType","Error","fetch","method","then","catch","err","d","normalizeData","result","ids","Array","isArray","forEach","e","push","isFetching","productsLike","fetchTypes","detail","combineReducers","entities","homeReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fb9a800.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass ErrorToast extends Component {\n    rendenr() {\n        const { error } = this.props;\n        return (\n            <div className='errorToast'>\n                <div className='errorToast__text'>\n                    {error}\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.clearTimer = setTimeout(() => {\n            this.props.clearError();\n        }, 3000);\n    }\n\n    componentWillUnmount() {\n        if (this.clearTimer) {\n            clearTimeout(this.clearTimer);\n        }\n    }\n}\n\nexport default ErrorToast;","const actionTypes = {\n    CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\nconst initState = {\n    error: ''\n}\n\nconst appActions = {\n    clearError: () => ({\n        type: actionTypes.CLEAR_ERROR\n    })\n}\n\nconst appReducer = (state = initState, action) => {\n    if (action.error != null) {\n        return {\n            ...state,\n            error: action.error\n        }\n    }\n\n    switch (action.type) {\n        case actionTypes.CLEAR_ERROR:\n            return {\n                ...state,\n                error: undefined\n            }\n        default:\n            return state;\n    }\n};\n\nconst getError = (state) => {\n    return state.app.error;\n}\n\nexport {\n    getError,\n    appActions,\n    appReducer\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ErrorToast from '../../components/ErrorToast';\nimport { appActions, getError } from '../../redux/modules/app';\nimport { bindActionCreators } from 'redux'\n\nclass App extends Component {\n    render() {\n        const { error, appActions: {clearError} } = this.props;\n        return (\n            <div>\n                {error ? <ErrorToast error={error} clearError={clearError} /> : null}       \n                <div>123</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        error: getError(state)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        appActions: bindActionCreators(appActions, dispatch)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","const schame = {\n    id: 'id',\n    name: 'products'\n}\n\nconst products = (state = {}, action) => {\n    if (action.response && action.response[schame.name]) {\n        return {\n            ...state,\n            ...action.response[schame.name]\n        }\n    }\n    return state;\n};\n\nexport {\n    schame,\n    products\n};","import comments from './comments';\nimport orders from './orders';\nimport { products } from './products';\nimport shops from './shops';\n\nexport default { comments, products, orders, shops };","const comments = (state = {}, action) => {\n    return state;\n};\n\nexport default comments;","const orders = (state = {}, action) => {\n    return state;\n};\n\nexport default orders;","const shops = (state = {}, action) => {\n    return state;\n};\n\nexport default shops;","const headers = new Headers({\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n});\n\nfunction get(url) {\n    fetch(url, {\n        method: 'GET',\n        headers: headers\n    }).then((response) => {\n        handleRespose(response, url);\n    }).catch((err) => {\n        console.error(`request fail: url: ${url} Message: ${err}`);\n        return Promise.reject({\n            error: {\n                message: `request fail: url: ${url} Message: ${err}`\n            }\n        })\n    })\n}\n\nfunction post(url, data) {\n    fetch(url, {\n        method: 'POST',\n        body: data,\n        headers: headers\n    }).then((response) => {\n        handleRespose(response, url);\n    }).catch((err) => {\n        console.error(`request fail: url: ${url} Message: ${err}`);\n        return Promise.reject({\n            error: {\n                message: `request fail: url: ${url} Message: ${err}`\n            }\n        })\n    })\n}\n\nfunction handleRespose(response, url) {\n    if (response.status === 200) {\n        return response.data.json();\n    }\n    else {\n        console.error(`request fail: status: ${response.status} url: ${url} Due to server`);\n        return Promise.reject({\n            error: {\n                message: `request fail: status: ${response.status} url: ${url} Due to server`\n            }\n        })\n    }\n}\n\nexport {\n    get,\n    post\n};","import { get } from '../../utils/request';\n\nconst FETCH_DATA = 'FETCH_DATA';\n\nconst fetchDataAction = store => next => action => {\n    const actionWith = data => {\n        let a =  {\n            ...action,\n            ...data\n        }\n        delete a[FETCH_DATA];\n        return a;\n    }\n\n    if (action[FETCH_DATA] === undefined) {\n        return next(action);\n    }\n    else {\n        const { types, endPoint, schame } = action[FETCH_DATA];\n        if (typeof types !== 'object' ||\n            typeof types.fetchRequestType !== 'string' ||\n            typeof types.fetchSuccessType !== 'string' ||\n            typeof types.fetchFailureType !== 'string'\n        ) {\n            throw new Error(`types 要是一个对象且要有 fetchRequestType，fetchSuccessType，fetchFailureType 字段`);\n        }\n        if (endPoint === undefined || typeof endPoint !== 'string') {\n            throw new Error(`url 一定要有且是一个字符串`);\n        }\n        if (typeof schame !== 'object' || schame.id === undefined || schame.name === undefined) {\n            throw new Error(`schame 要是一个对象且要有 id 和 name 两个字段`);\n        }\n        if (typeof schame.id !== 'string') {\n            throw new Error(`id 一定要有且是一个字符串`);\n        }\n        if (typeof schame.name !== 'string') {\n            throw new Error(`name 一定要有且是一个字符串`);\n        }\n        next(actionWith({\n            type: types.fetchRequestType\n        }));\n        return get(endPoint).then((data) => {\n            const d = normalizeData(data, schame.name, schame.id);\n            next(actionWith({\n                type: types.fetchSuccessType,\n                response: d\n            }));\n        }).catch((error) => {\n            next(actionWith({\n                type: types.fetchFailureType,\n                error: error.message || '获取信息错误'\n            }));\n        });\n    }\n}\n\nconst normalizeData = (data, name, id) => {\n    let result = {};\n    let ids = []\n    if (Array.isArray(data)) {\n        data.forEach(e => {\n            result[e[id]] = e;\n            ids.push(e[id]);\n        });\n    }\n    else {\n        result[data[id]] = data;\n        ids.push(data[id]);\n    }\n    return {\n        [name]: result,\n        ids\n    }\n}\n\nexport {\n    FETCH_DATA,\n    fetchDataAction\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './modules';\nimport thunk from 'redux-thunk';\nimport { fetchDataAction } from './middlewares/api';\n\nlet composeEnhancers;\nif (process.env.NODE_ENV === 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n}\nelse {\n    composeEnhancers = compose;\n}\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, fetchDataAction)));\nexport default store;","import { getProductsLikeUrl } from '../../utils/url';\nimport { FETCH_DATA, fetchDataAction } from '../middlewares/api';\nimport { schame } from '../modules/entities/products';\n\nconst initState = {\n    isFetching: false,\n    productsLike: {},\n    error: ''\n}\nconst fetchTypes = {\n    fetchRequestType: 'fetchRequestType',\n    fetchSuccessType: 'fetchSuccessType',\n    fetchFailureType: 'fetchFailureType'\n}\nconst fetchAction = {\n    [FETCH_DATA]: {\n        endPoint: getProductsLikeUrl(),\n        types: fetchTypes,\n        schame\n    }\n};\n\nconst getProductsLikeAction = () => {\n    return (dispatch) => {\n        return dispatch(fetchDataAction(fetchAction));\n    }\n}\n\nconst homeReducer = (state = initState, action) => {\n    switch (action.type) {\n        case fetchTypes.fetchRequestType:\n            return {\n                ...state,\n                isFetching: true\n            };\n        case fetchTypes.fetchSuccessType:\n            return {\n                ...state,\n                productsLike: action.data,\n                isFetching: false\n            };\n        case fetchTypes.fetchFailureType:\n            return {\n                ...state,\n                error: action.error,\n                isFetching: false\n            }\n        default:\n            return state;\n    }\n};\nexport {\n    homeReducer,\n    getProductsLikeAction\n};","const detail = (state = {}, action) => {\n    return state;\n};\n\nexport default detail;","const getProductList = (rowIndex, pageSize) => {\n    return `/mock/products.json?rowIndex=${rowIndex}&pageSize=${pageSize}`;\n};\nconst getProductsLikeUrl = () => {\n    return `/mock/productsLike.json`;\n};\nexport {\n    getProductList,\n    getProductsLikeUrl\n};","import { combineReducers } from 'redux';\nimport entities from './entities';\nimport { homeReducer } from './home';\nimport detail from './detail';\nimport { appReducer as app } from './app';\n\nexport default combineReducers({ entities, homeReducer, detail, app });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}